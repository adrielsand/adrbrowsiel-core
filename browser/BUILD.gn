import("//adrbrowsiel/build/config.gni")
import("//adrbrowsiel/components/speedreader/buildflags.gni")
import("//build/buildflag_header.gni")
import("//build/config/features.gni")
import("//chrome/common/features.gni")

buildflag_header("sparkle_buildflags") {
  header = "sparkle_buildflags.h"
  flags = [ "ENABLE_SPARKLE=$enable_sparkle" ]
}

source_set("browser_process") {
  visibility = [
    "//adrbrowsiel/browser/*",
    "//chrome/browser/*",
  ]

  sources = [ "adrbrowsiel_browser_process.h" ]

  deps = [
    "//adrbrowsiel/components/adrbrowsiel_ads/browser/buildflags",
    "//adrbrowsiel/components/adrbrowsiel_referrals/buildflags",
    "//adrbrowsiel/components/greaselion/browser/buildflags",
    "//adrbrowsiel/components/ipfs/buildflags",
    "//adrbrowsiel/components/speedreader:buildflags",
    "//adrbrowsiel/components/tor/buildflags",
    "//chrome/browser:browser_process",
    "//extensions/buildflags",
  ]
}

group("browser") {
  visibility = [
    "//adrbrowsiel:browser_dependencies",
    "//adrbrowsiel/browser/*",
    "//adrbrowsiel/test:*",
    "//adrbrowsiel/vendor/bat-native-ledger:headers",

    # these are layering violation and need to be fixed
    "//adrbrowsiel/components/adrbrowsiel_ads/test:adrbrowsiel_ads_unit_tests",
    "//adrbrowsiel/components/adrbrowsiel_rewards/browser:testutil",
    "//adrbrowsiel/components/adrbrowsiel_rewards/test:adrbrowsiel_rewards_unit_tests",
    "//adrbrowsiel/components/ipfs/test:*",
  ]

  if (enable_sparkle) {
    deps = [ "//adrbrowsiel/vendor/sparkle:sparkle_framework_bundle_data" ]
  }

  # Group depending on upstream's counterpart to make it easier to manage
  # dependencies in adrbrowsiel/ (//chrome/browser does not depend on this target
  # so //adrbrowsiel/browser becomes essentially an alias for //chrome/browser now).
  public_deps = [ "//chrome/browser" ]
}
