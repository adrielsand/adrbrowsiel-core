import("//adrbrowsiel/build/cargo.gni")

lib_build_path = "$root_build_dir/adrbrowsiel_rust/out/$current_cpu"
lib_output_path =
    "$lib_build_path/${cargo_lib_prefix}adrbrowsiel_rust${cargo_lib_suffix}"

# TODO(bridiver) - selectively include these libraries based on buildflags, but
# in order to do that we have to dynamically create the adrbrowsiel rust lib
cargo_build("rust_lib") {
  visibility = [ ":*" ]
  inputs = [
    "Cargo.toml",
    "lib.rs",
  ]

  build_path = lib_build_path
  output = lib_output_path
  manifest_path = "Cargo.toml"

  deps = [
    "//adrbrowsiel/components/adblock_rust_ffi:rust_lib",
    "//adrbrowsiel/components/challenge_bypass_ristretto:rust_lib",
    "//adrbrowsiel/components/speedreader/rust/lib",
  ]
}

adrbrowsiel_ffi_deps = [
  "//adrbrowsiel/components/adblock_rust_ffi:rust_ffi",
  "//adrbrowsiel/components/challenge_bypass_ristretto:rust_ffi",
  "//adrbrowsiel/components/speedreader/rust/ffi:rust_ffi",
]

adrbrowsiel_rust_deps = adrbrowsiel_ffi_deps + [ ":rust_lib" ]

if (is_mac) {
  shared_library("adrbrowsiel_rust") {
    visibility = [ ":*" ]
    deps = adrbrowsiel_rust_deps

    public_deps = adrbrowsiel_ffi_deps

    ldflags =
        [ "-Wl,-install_name,@loader_path/Libraries/lib$target_name.dylib" ]
  }

  # This is just a hack so @loader_path/Libraries/lib$target_name.dylib
  # works for the test executables
  copy("copy_rust_lib") {
    visibility = [ ":*" ]
    sources = [ "$root_out_dir/libadrbrowsiel_rust.dylib" ]
    outputs = [ "$root_out_dir/Libraries/{{source_file_part}}" ]

    public_deps = [ ":adrbrowsiel_rust" ]
  }

  bundle_data("bundle_rust_lib") {
    visibility = [ ":*" ]
    sources = [ "$root_out_dir/Libraries/libadrbrowsiel_rust.dylib" ]
    outputs = [ "{{bundle_contents_dir}}/Libraries/{{source_file_part}}" ]

    public_deps = [ ":copy_rust_lib" ]
  }
} else {
  config("external_config") {
    libs = [ lib_output_path ]
  }

  group("adrbrowsiel_rust") {
    public_configs = [ ":external_config" ]
    visibility = [ ":*" ]
    deps = adrbrowsiel_rust_deps
    public_deps = adrbrowsiel_ffi_deps
  }
}

group("rust") {
  public_deps = [ ":adrbrowsiel_rust" ]
  if (is_mac) {
    deps = [ ":bundle_rust_lib" ]
  }
}
